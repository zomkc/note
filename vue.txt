el:挂载点:
Vue实例的作用范围是什么: Vue会管理el选项命中的元素及其内部的后代元素

可以使用其他的选择器,但是建议使用ID选择器

可以使用其他的双标签,不能使用HTML和BODY



data:数据对象:
vue中用到的数据定义在data中

data中可以写复杂类型的数据

渲染复杂类型数据时,遵守js的语法即可



v-text:
v-text指令的作用是: 设置标签的内容(textContent)

默认写法会替换全部内容,使用差值表达式{{}}可以替换指定内容

内部支持写表达式



v-html:
v-html指令的作用是: 设置元素的innerHTML

内容中由html结构会被解析为标签

v-text指令无论内容是什么,只会解析为文本

解析文本使用v-text,需要解析html结构使用v-html



v-on:
v-on指令的作用是: 为元素绑定事件

事件名不需要写on

指令可以简写为@

绑定的方法定义在methods属性中

补充:
事件绑定的方法写成函数调用的形式,可以传入自定义参数
定义方法是需要定义形参来接收传入的实参
事件的后面跟上 .修饰符 可以对事件进行限制
.enter 可以限制触发的按键为回车
事件修饰符有多种



创建vue实例时:el(挂断点),data(数据),methods(方法)
v-on指令的作用是绑定事件,简写为@
方法中通过this关键字获取data中的数据
v-text指令的作用是:设置元素的文本值,简写为{{ }}
v-html指令的作用是s设置元素的innerHTML



v-show:
v-show指令的作用是:根据真假切换元素的显示状态

原理是修改元素的display,实现显示隐藏

指令后面的内容,最终都会被解析为布尔值

值为true元素显示,值为false元素隐藏

数据改变之后,对应元素的显示状态会同步更新



v-if:
v-if指令的作用是: 根据表达式的真假切换元素的显示状态

本质是通过操作dom元素来切换显示状态

表达式的值为true,元素存在于dom树中,为false,从dom树中移除

频繁的切换v-show,反之使用v-if,前者的切换消耗小



v-bind:
v-bind指令的作用是:为元素绑定属性

完整写法是v-bind:属性名

简写的话可以直接省略v-bind,只保留 :属性名

需要动态的增删class建议使用对象的方式



v-for:
v-for指令的作用:根据数据生成列表结构

数组经常和v-for结合使用

语法是(item , index) in 数据

item和index可以结合结合其他指令一起使用

数组长度的更新会同步到页面上,是响应式的



v-model:
v-model指令的作用是便携的设置和获取表单元素的值

绑定的数据会和表单元素值相关联

绑定的数据<---->表单元素的值


v-cloak:
	本质是一个特殊属性,vue实例创建完毕并接管容器后,会删除
	配合css,可以解决网速慢页面展示{{xxx}}的问题
 css:	[v-cloak]{ display:none;}


v-once:
	v-once所在的节点在初次动态渲染后,就视为静态内容了
	以后数据的改变不会引起v-once所在结构的关系,可用于优化性能


v-pre:
	跳过所在节点的编译过程
	可利用它跳过没有使用指令语法,没有使用插值语法的节点,加快编译





axios
axios必须先导入才可以使用
使用get或post方法即可发送对应的请求
then方法中的回调函数会在请求成功或失败时触发
通过回调函数的形参可以获取响应内容,或错误信息

axios回调函数中的this已经改变,无法访问到data中数据
把this保存起来,回调函数中直接使用保存的this即可
和本地应用的最大区别就是改变了数据来源



